{"ast":null,"code":"import React, { useState } from 'react';\nimport menuTrack1 from '../sound/menu/sappheiros-embrace.mp3';\nimport menuTrack2 from '../sound/menu/Go Go Go - Kwon.mp3';\nimport menuTrack3 from '../sound/menu/Ocean View - Patrick Patrikios.mp3';\nimport menuTrack4 from '../sound/menu/Polyphonic Congas - Unicorn Heads.mp3';\nimport menuTrack5 from '../sound/menu/Space Station Experience - Unicorn Heads.mp3';\nconst menuTrac = [{\n  \"artist\": \"sappheiros\",\n  \"track\": \"embrace\",\n  \"file\": menuTrack1\n}, {\n  \"artist\": \"Known\",\n  \"track\": \"Go Go Go\",\n  \"file\": menuTrack2\n}, {\n  \"artist\": \"Patrick Patrikios\",\n  \"track\": \"Ocean View\",\n  \"file\": menuTrack3\n}, {\n  \"artist\": \"Unicorn Heads\",\n  \"track\": \"Polyphonic Congas\",\n  \"file\": menuTrack4\n}, {\n  \"artist\": \"Unicorn Heads\",\n  \"track\": \"Space Station Experience\",\n  \"file\": menuTrack5\n}];\nconst musicIsPlaying = null;\nconst [musicPlays, setMusicPlays] = useState(false);\n\nconst toggleMusic = () => {\n  let button = document.querySelector('.playMusic');\n  let audioElement = document.querySelector('audio');\n\n  if (musicPlays) {\n    audioElement.pause();\n    button.children[0].innerText = 'music_off';\n    setMusicPlays(false);\n  } else {\n    audioElement.play();\n    button.children[0].innerText = 'music_note';\n    setMusicPlays(true);\n  }\n};","map":{"version":3,"sources":["/home/kevin/websites/html/jump-and-run-js/src/assets/components/music.js"],"names":["React","useState","menuTrack1","menuTrack2","menuTrack3","menuTrack4","menuTrack5","menuTrac","musicIsPlaying","musicPlays","setMusicPlays","toggleMusic","button","document","querySelector","audioElement","pause","children","innerText","play"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,OAAOC,UAAP,MAAuB,qDAAvB;AACA,OAAOC,UAAP,MAAuB,4DAAvB;AAGI,MAAMC,QAAQ,GAAG,CACb;AACI,YAAgB,YADpB;AAEI,WAAgB,SAFpB;AAGI,UAAgBL;AAHpB,CADa,EAMb;AACI,YAAgB,OADpB;AAEI,WAAgB,UAFpB;AAGI,UAAgBC;AAHpB,CANa,EAWb;AACI,YAAgB,mBADpB;AAEI,WAAgB,YAFpB;AAGI,UAAgBC;AAHpB,CAXa,EAgBb;AACI,YAAgB,eADpB;AAEI,WAAgB,mBAFpB;AAGI,UAAgBC;AAHpB,CAhBa,EAqBb;AACI,YAAgB,eADpB;AAEI,WAAgB,0BAFpB;AAGI,UAAgBC;AAHpB,CArBa,CAAjB;AA4BA,MAAME,cAAc,GAAI,IAAxB;AAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,MAAMU,WAAW,GAAG,MAAM;AAExB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAb;AACA,MAAIC,YAAY,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAnB;;AAEA,MAAGL,UAAH,EAAc;AACZM,IAAAA,YAAY,CAACC,KAAb;AACAJ,IAAAA,MAAM,CAACK,QAAP,CAAgB,CAAhB,EAAmBC,SAAnB,GAA+B,WAA/B;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AAED,GALD,MAKK;AACHK,IAAAA,YAAY,CAACI,IAAb;AACAP,IAAAA,MAAM,CAACK,QAAP,CAAgB,CAAhB,EAAmBC,SAAnB,GAA+B,YAA/B;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,CAfD","sourcesContent":["import React, { useState } from 'react';\n\nimport menuTrack1 from '../sound/menu/sappheiros-embrace.mp3'\nimport menuTrack2 from '../sound/menu/Go Go Go - Kwon.mp3'\nimport menuTrack3 from '../sound/menu/Ocean View - Patrick Patrikios.mp3'\nimport menuTrack4 from '../sound/menu/Polyphonic Congas - Unicorn Heads.mp3'\nimport menuTrack5 from '../sound/menu/Space Station Experience - Unicorn Heads.mp3'\n\n\n    const menuTrac = [\n        {\n            \"artist\"    :   \"sappheiros\",\n            \"track\"     :   \"embrace\",\n            \"file\"      :   menuTrack1\n        },\n        {\n            \"artist\"    :   \"Known\",\n            \"track\"     :   \"Go Go Go\",\n            \"file\"      :   menuTrack2\n        },\n        {\n            \"artist\"    :   \"Patrick Patrikios\",\n            \"track\"     :   \"Ocean View\",\n            \"file\"      :   menuTrack3\n        }, \n        {\n            \"artist\"    :   \"Unicorn Heads\",\n            \"track\"     :   \"Polyphonic Congas\",\n            \"file\"      :   menuTrack4\n        }, \n        {\n            \"artist\"    :   \"Unicorn Heads\",\n            \"track\"     :   \"Space Station Experience\",\n            \"file\"      :   menuTrack5\n        }\n    ]\n\n    const musicIsPlaying =  null\n\n    const [musicPlays, setMusicPlays] = useState(false)\n\n    const toggleMusic = () => {\n  \n      let button = document.querySelector('.playMusic')\n      let audioElement = document.querySelector('audio')\n  \n      if(musicPlays){\n        audioElement.pause()\n        button.children[0].innerText = 'music_off'\n        setMusicPlays(false)\n    \n      }else{\n        audioElement.play()\n        button.children[0].innerText = 'music_note'\n        setMusicPlays(true)\n      }\n    }\n"]},"metadata":{},"sourceType":"module"}